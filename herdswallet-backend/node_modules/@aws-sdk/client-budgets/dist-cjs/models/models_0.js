"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateSubscriberRequestFilterSensitiveLog = exports.UpdateBudgetActionResponseFilterSensitiveLog = exports.UpdateBudgetActionRequestFilterSensitiveLog = exports.DescribeSubscribersForNotificationResponseFilterSensitiveLog = exports.DescribeBudgetActionsForBudgetResponseFilterSensitiveLog = exports.DescribeBudgetActionsForAccountResponseFilterSensitiveLog = exports.DescribeBudgetActionHistoriesResponseFilterSensitiveLog = exports.DescribeBudgetActionResponseFilterSensitiveLog = exports.DeleteSubscriberRequestFilterSensitiveLog = exports.DeleteBudgetActionResponseFilterSensitiveLog = exports.CreateSubscriberRequestFilterSensitiveLog = exports.CreateNotificationRequestFilterSensitiveLog = exports.CreateBudgetActionRequestFilterSensitiveLog = exports.CreateBudgetRequestFilterSensitiveLog = exports.NotificationWithSubscribersFilterSensitiveLog = exports.ActionHistoryFilterSensitiveLog = exports.ActionHistoryDetailsFilterSensitiveLog = exports.ActionFilterSensitiveLog = exports.SubscriberFilterSensitiveLog = exports.ExecutionType = exports.ExpiredNextTokenException = exports.InvalidNextTokenException = exports.ResourceLockedException = exports.NotFoundException = exports.ThrottlingException = exports.InvalidParameterException = exports.InternalErrorException = exports.DuplicateRecordException = exports.CreationLimitExceededException = exports.NotificationState = exports.ComparisonOperator = exports.TimeUnit = exports.BudgetType = exports.AutoAdjustType = exports.EventType = exports.SubscriptionType = exports.ActionStatus = exports.NotificationType = exports.ActionSubType = exports.ApprovalModel = exports.ActionType = exports.ThresholdType = exports.AccessDeniedException = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const BudgetsServiceException_1 = require("./BudgetsServiceException");
class AccessDeniedException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
exports.AccessDeniedException = AccessDeniedException;
var ThresholdType;
(function (ThresholdType) {
    ThresholdType["ABSOLUTE_VALUE"] = "ABSOLUTE_VALUE";
    ThresholdType["PERCENTAGE"] = "PERCENTAGE";
})(ThresholdType = exports.ThresholdType || (exports.ThresholdType = {}));
var ActionType;
(function (ActionType) {
    ActionType["IAM"] = "APPLY_IAM_POLICY";
    ActionType["SCP"] = "APPLY_SCP_POLICY";
    ActionType["SSM"] = "RUN_SSM_DOCUMENTS";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
var ApprovalModel;
(function (ApprovalModel) {
    ApprovalModel["AUTO"] = "AUTOMATIC";
    ApprovalModel["MANUAL"] = "MANUAL";
})(ApprovalModel = exports.ApprovalModel || (exports.ApprovalModel = {}));
var ActionSubType;
(function (ActionSubType) {
    ActionSubType["STOP_EC2"] = "STOP_EC2_INSTANCES";
    ActionSubType["STOP_RDS"] = "STOP_RDS_INSTANCES";
})(ActionSubType = exports.ActionSubType || (exports.ActionSubType = {}));
var NotificationType;
(function (NotificationType) {
    NotificationType["ACTUAL"] = "ACTUAL";
    NotificationType["FORECASTED"] = "FORECASTED";
})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));
var ActionStatus;
(function (ActionStatus) {
    ActionStatus["Execution_Failure"] = "EXECUTION_FAILURE";
    ActionStatus["Execution_In_Progress"] = "EXECUTION_IN_PROGRESS";
    ActionStatus["Execution_Success"] = "EXECUTION_SUCCESS";
    ActionStatus["Pending"] = "PENDING";
    ActionStatus["Reset_Failure"] = "RESET_FAILURE";
    ActionStatus["Reset_In_Progress"] = "RESET_IN_PROGRESS";
    ActionStatus["Reverse_Failure"] = "REVERSE_FAILURE";
    ActionStatus["Reverse_In_Progress"] = "REVERSE_IN_PROGRESS";
    ActionStatus["Reverse_Success"] = "REVERSE_SUCCESS";
    ActionStatus["Standby"] = "STANDBY";
})(ActionStatus = exports.ActionStatus || (exports.ActionStatus = {}));
var SubscriptionType;
(function (SubscriptionType) {
    SubscriptionType["EMAIL"] = "EMAIL";
    SubscriptionType["SNS"] = "SNS";
})(SubscriptionType = exports.SubscriptionType || (exports.SubscriptionType = {}));
var EventType;
(function (EventType) {
    EventType["CreateAction"] = "CREATE_ACTION";
    EventType["DeleteAction"] = "DELETE_ACTION";
    EventType["ExecuteAction"] = "EXECUTE_ACTION";
    EventType["System"] = "SYSTEM";
    EventType["UpdateAction"] = "UPDATE_ACTION";
})(EventType = exports.EventType || (exports.EventType = {}));
var AutoAdjustType;
(function (AutoAdjustType) {
    AutoAdjustType["FORECAST"] = "FORECAST";
    AutoAdjustType["HISTORICAL"] = "HISTORICAL";
})(AutoAdjustType = exports.AutoAdjustType || (exports.AutoAdjustType = {}));
var BudgetType;
(function (BudgetType) {
    BudgetType["Cost"] = "COST";
    BudgetType["RICoverage"] = "RI_COVERAGE";
    BudgetType["RIUtilization"] = "RI_UTILIZATION";
    BudgetType["SPCoverage"] = "SAVINGS_PLANS_COVERAGE";
    BudgetType["SPUtilization"] = "SAVINGS_PLANS_UTILIZATION";
    BudgetType["Usage"] = "USAGE";
})(BudgetType = exports.BudgetType || (exports.BudgetType = {}));
var TimeUnit;
(function (TimeUnit) {
    TimeUnit["ANNUALLY"] = "ANNUALLY";
    TimeUnit["DAILY"] = "DAILY";
    TimeUnit["MONTHLY"] = "MONTHLY";
    TimeUnit["QUARTERLY"] = "QUARTERLY";
})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));
var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["EQUAL_TO"] = "EQUAL_TO";
    ComparisonOperator["GREATER_THAN"] = "GREATER_THAN";
    ComparisonOperator["LESS_THAN"] = "LESS_THAN";
})(ComparisonOperator = exports.ComparisonOperator || (exports.ComparisonOperator = {}));
var NotificationState;
(function (NotificationState) {
    NotificationState["ALARM"] = "ALARM";
    NotificationState["OK"] = "OK";
})(NotificationState = exports.NotificationState || (exports.NotificationState = {}));
class CreationLimitExceededException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "CreationLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "CreationLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CreationLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
exports.CreationLimitExceededException = CreationLimitExceededException;
class DuplicateRecordException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "DuplicateRecordException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateRecordException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateRecordException.prototype);
        this.Message = opts.Message;
    }
}
exports.DuplicateRecordException = DuplicateRecordException;
class InternalErrorException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
exports.InternalErrorException = InternalErrorException;
class InvalidParameterException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidParameterException = InvalidParameterException;
class ThrottlingException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
exports.ThrottlingException = ThrottlingException;
class NotFoundException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
exports.NotFoundException = NotFoundException;
class ResourceLockedException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "ResourceLockedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceLockedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceLockedException.prototype);
        this.Message = opts.Message;
    }
}
exports.ResourceLockedException = ResourceLockedException;
class InvalidNextTokenException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidNextTokenException = InvalidNextTokenException;
class ExpiredNextTokenException extends BudgetsServiceException_1.BudgetsServiceException {
    constructor(opts) {
        super({
            name: "ExpiredNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
exports.ExpiredNextTokenException = ExpiredNextTokenException;
var ExecutionType;
(function (ExecutionType) {
    ExecutionType["ApproveBudgetAction"] = "APPROVE_BUDGET_ACTION";
    ExecutionType["ResetBudgetAction"] = "RESET_BUDGET_ACTION";
    ExecutionType["RetryBudgetAction"] = "RETRY_BUDGET_ACTION";
    ExecutionType["ReverseBudgetAction"] = "REVERSE_BUDGET_ACTION";
})(ExecutionType = exports.ExecutionType || (exports.ExecutionType = {}));
const SubscriberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Address && { Address: smithy_client_1.SENSITIVE_STRING }),
});
exports.SubscriberFilterSensitiveLog = SubscriberFilterSensitiveLog;
const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.ActionFilterSensitiveLog = ActionFilterSensitiveLog;
const ActionHistoryDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: (0, exports.ActionFilterSensitiveLog)(obj.Action) }),
});
exports.ActionHistoryDetailsFilterSensitiveLog = ActionHistoryDetailsFilterSensitiveLog;
const ActionHistoryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ActionHistoryDetails && {
        ActionHistoryDetails: (0, exports.ActionHistoryDetailsFilterSensitiveLog)(obj.ActionHistoryDetails),
    }),
});
exports.ActionHistoryFilterSensitiveLog = ActionHistoryFilterSensitiveLog;
const NotificationWithSubscribersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.NotificationWithSubscribersFilterSensitiveLog = NotificationWithSubscribersFilterSensitiveLog;
const CreateBudgetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBudgetRequestFilterSensitiveLog = CreateBudgetRequestFilterSensitiveLog;
const CreateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.CreateBudgetActionRequestFilterSensitiveLog = CreateBudgetActionRequestFilterSensitiveLog;
const CreateNotificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.CreateNotificationRequestFilterSensitiveLog = CreateNotificationRequestFilterSensitiveLog;
const CreateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: (0, exports.SubscriberFilterSensitiveLog)(obj.Subscriber) }),
});
exports.CreateSubscriberRequestFilterSensitiveLog = CreateSubscriberRequestFilterSensitiveLog;
const DeleteBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: (0, exports.ActionFilterSensitiveLog)(obj.Action) }),
});
exports.DeleteBudgetActionResponseFilterSensitiveLog = DeleteBudgetActionResponseFilterSensitiveLog;
const DeleteSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: (0, exports.SubscriberFilterSensitiveLog)(obj.Subscriber) }),
});
exports.DeleteSubscriberRequestFilterSensitiveLog = DeleteSubscriberRequestFilterSensitiveLog;
const DescribeBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: (0, exports.ActionFilterSensitiveLog)(obj.Action) }),
});
exports.DescribeBudgetActionResponseFilterSensitiveLog = DescribeBudgetActionResponseFilterSensitiveLog;
const DescribeBudgetActionHistoriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeBudgetActionHistoriesResponseFilterSensitiveLog = DescribeBudgetActionHistoriesResponseFilterSensitiveLog;
const DescribeBudgetActionsForAccountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeBudgetActionsForAccountResponseFilterSensitiveLog = DescribeBudgetActionsForAccountResponseFilterSensitiveLog;
const DescribeBudgetActionsForBudgetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeBudgetActionsForBudgetResponseFilterSensitiveLog = DescribeBudgetActionsForBudgetResponseFilterSensitiveLog;
const DescribeSubscribersForNotificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.DescribeSubscribersForNotificationResponseFilterSensitiveLog = DescribeSubscribersForNotificationResponseFilterSensitiveLog;
const UpdateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => (0, exports.SubscriberFilterSensitiveLog)(item)) }),
});
exports.UpdateBudgetActionRequestFilterSensitiveLog = UpdateBudgetActionRequestFilterSensitiveLog;
const UpdateBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldAction && { OldAction: (0, exports.ActionFilterSensitiveLog)(obj.OldAction) }),
    ...(obj.NewAction && { NewAction: (0, exports.ActionFilterSensitiveLog)(obj.NewAction) }),
});
exports.UpdateBudgetActionResponseFilterSensitiveLog = UpdateBudgetActionResponseFilterSensitiveLog;
const UpdateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldSubscriber && { OldSubscriber: (0, exports.SubscriberFilterSensitiveLog)(obj.OldSubscriber) }),
    ...(obj.NewSubscriber && { NewSubscriber: (0, exports.SubscriberFilterSensitiveLog)(obj.NewSubscriber) }),
});
exports.UpdateSubscriberRequestFilterSensitiveLog = UpdateSubscriberRequestFilterSensitiveLog;
